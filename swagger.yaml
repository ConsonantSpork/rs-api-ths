swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger Documentation
tags:
  - name: data
    description: Device data operations
  - name: device
    description: Device operations
  - name: user
    description: User operations
schemes:
  - https
  - http
paths:
  /data:
    get:
      tags:
        - data
      summary: Get a device's data
      description: Get data of a given type from a single device for a time period
      produces:
        - application/json
      parameters:
        - in: query
          name: device_id
          type: integer
          required: true
        - in: query
          name: type
          type: string
          default: default
        - in: query
          name: from
          type: string
          format: date-time
        - in: query
          name: to
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Data'
  /latest_data:
    get:
      tags:
        - data
      summary: Get a device's latest data item
      description: Get latest data item of a given type from a single device
      produces:
        - application/json
      parameters:
        - in: query
          name: device_id
          type: integer
          required: true
        - in: query
          name: type
          type: string
          default: default
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Data'
  /device:
    post:
      tags:
        - device
      summary: Create device
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  '/device/{device_id}':
    get:
      tags:
        - device
      summary: Get device by device id
      produces:
        - application/xml
        - application/json
      parameters:
        - name: device_id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - device
      summary: Update device
      produces:
        - application/xml
        - application/json
      parameters:
        - name: device_id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - device
      summary: Delete device
      description: This can only be done by the logged in user.
      produces:
        - application/xml
        - application/json
      parameters:
        - name: device_id
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /user:
    post:
      tags:
        - user
      summary: Create user
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
definitions:
  Data:
    type: object
    properties:
      datetime:
        type: string
        format: date-time
      value:
        type: integer
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
